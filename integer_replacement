*&---------------------------------------------------------------------*
*& Report zinteger_replacement
*&---------------------------------------------------------------------*
* 397. Integer Replacement
*Given a positive integer n, you can apply one of the following operations:
*If n is even, replace n with n / 2.
*If n is odd, replace n with either n + 1 or n - 1.
*Return the minimum number of operations needed for n to become 1.
*
*Example 1:
*Input: n = 8
*Output: 3
*Explanation: 8 -> 4 -> 2 -> 1
*
*Example 2:
*Input: n = 7
*Output: 4
*Explanation: 7 -> 8 -> 4 -> 2 -> 1
*or 7 -> 6 -> 3 -> 2 -> 1
*
*Example 3:
*Input: n = 4
*Output: 2
*&---------------------------------------------------------------------*
REPORT zinteger_replacement.
DATA(counter) = 0.
DATA str TYPE string.
PARAMETERS input TYPE i.

IF input IS INITIAL OR input < 0.
  DATA(result) = -1.
ENDIF.

CASE input.
  WHEN 1.
    result = input.
  WHEN OTHERS.
    WHILE ( input > 1 ).
      DATA(i) = input.
      WRITE:/ |{ input }|.
      IF ( input MOD 2 = 0 ).
        input = input / 2.
      ELSE.
        i = input + 1.
        IF ( i MOD 4 = 0 ).
          input = i.
        ELSE.
          input = i - 2.
        ENDIF.
      ENDIF.
      counter += 1.
    ENDWHILE.
ENDCASE.

result = counter.
Write:/ '1'.
ULINE.
WRITE:/ |Output:{ result }|.
